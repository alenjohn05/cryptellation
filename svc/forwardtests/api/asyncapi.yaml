asyncapi: 3.0.0
info:
  title: Cryptellation ForwardTests Service
  version: 1.0.0
  description: >
    This service is providing simulations on live data.

channels:
  AccountsListRequest:
    address: cryptellation.forwardtests.accounts.list
    messages:
      AccountsListRequest:
        $ref: "#/components/messages/AccountsListRequest"
  AccountsListResponse:
    messages:
      AccountsListResponse:
        $ref: "#/components/messages/AccountsListResponse"

  CreateRequest:
    address: cryptellation.forwardtests.create
    messages:
      CreateRequest:
        $ref: "#/components/messages/CreateRequest"
  CreateResponse:
    messages:
      CreateResponse:
        $ref: "#/components/messages/CreateResponse"

  ListRequest:
    address: cryptellation.forwardtests.list
    messages:
      ListRequest:
        $ref: "#/components/messages/ListRequest"
  ListResponse:
    messages:
      ListResponse:
        $ref: "#/components/messages/ListResponse"

  OrdersCreateRequest:
    address: cryptellation.forwardtests.orders.create
    messages:
      OrdersCreateRequest:
        $ref: "#/components/messages/OrdersCreateRequest"
  OrdersCreateResponse:
    messages:
      OrdersCreateResponse:
        $ref: "#/components/messages/OrdersCreateResponse"

  StatusRequest:
    address: cryptellation.forwardtests.status
    messages:
      StatusRequest:
        $ref: "#/components/messages/StatusRequest"
  StatusResponse:
    messages:
      StatusResponse:
        $ref: "#/components/messages/StatusResponse"

  ServiceInfoRequest:
    address: cryptellation.forwardtests.info
    messages:
      ServiceInfoRequest:
        $ref: "#/components/messages/ServiceInfoRequest"
  ServiceInfoResponse:
    messages:
      ServiceInfoResponse:
        $ref: "#/components/messages/ServiceInfoResponse"

operations:
  AccountsList:
    action: receive
    channel: 
      $ref: "#/channels/AccountsListRequest"
    reply:
      address:
        location: "$message.header#/replyTo"
      channel:
        $ref: '#/channels/AccountsListResponse'

  Create:
    action: receive
    channel: 
      $ref: "#/channels/CreateRequest"
    reply:
      address:
        location: "$message.header#/replyTo"
      channel:
        $ref: '#/channels/CreateResponse'

  List:
    action: receive
    channel: 
      $ref: "#/channels/ListRequest"
    reply:
      address:
        location: "$message.header#/replyTo"
      channel:
        $ref: '#/channels/ListResponse'

  OrdersCreate:
    action: receive
    channel: 
      $ref: "#/channels/OrdersCreateRequest"
    reply:
      address:
        location: "$message.header#/replyTo"
      channel:
        $ref: '#/channels/OrdersCreateResponse'

  GetStatus:
    action: receive
    channel:
      $ref: "#/channels/StatusRequest"
    reply:
      address:
        location: "$message.header#/replyTo"
      channel:
        $ref: '#/channels/StatusResponse'

  ServiceInfo:
    action: receive
    channel: 
      $ref: "#/channels/ServiceInfoRequest"
    reply:
      address:
        location: "$message.header#/replyTo"
      channel:
        $ref: '#/channels/ServiceInfoResponse'

components:
  messageTraits:
    withReplyTo:
      headers:
        type: object
        required:
          - replyTo
        properties:
          replyTo:
            description: Channel used to respond to request
            type: string
    withCorrelationID:
      headers:
        type: object
        properties:
          correlationId:
            description: Correlation ID set by client
            type: string
      correlationId:
        description: Default Correlation ID
        location: $message.header#/correlationId

  messages:
    AccountsListRequest:
      payload:
        type: object
        required:
          - id
        properties:
          id:
            $ref: '#/components/schemas/ForwardTestID'
      traits:
        - $ref: "#/components/messageTraits/withReplyTo"
        - $ref: "#/components/messageTraits/withCorrelationID"
    AccountsListResponse:
      payload:
        type: object
        oneOf:
        - properties:
            accounts:
              type: array
              items:
                $ref: '#/components/schemas/Account'
        - properties:
            error:
              $ref: '../../../../pkg/asyncapi/models.yaml#/components/schemas/Error'
      traits:
        - $ref: "#/components/messageTraits/withCorrelationID"

    CreateRequest:
      payload:
        type: object
        required:
          - accounts
        properties:
          accounts:
            type: array
            items:
              $ref: '#/components/schemas/Account'
      traits:
        - $ref: "#/components/messageTraits/withReplyTo"
        - $ref: "#/components/messageTraits/withCorrelationID"
    CreateResponse:
      payload:
        type: object
        required:
          - id
        oneOf:
        - properties:
            id:
              type: string
              description: Newly created forwardtest ID
        - properties:
            error:
              $ref: '../../../../pkg/asyncapi/models.yaml#/components/schemas/Error'
      traits:
        - $ref: "#/components/messageTraits/withCorrelationID"

    ListRequest:
      payload:
        type: object
      traits:
        - $ref: "#/components/messageTraits/withReplyTo"
        - $ref: "#/components/messageTraits/withCorrelationID"
    ListResponse:
      payload:
        type: object
        oneOf:
        - properties:
            ids:
              type: array
              items:
                $ref: '#/components/schemas/ForwardTestID'
        - properties:
            error:
              $ref: '../../../../pkg/asyncapi/models.yaml#/components/schemas/Error'
      traits:
        - $ref: "#/components/messageTraits/withCorrelationID"

    OrdersCreateRequest:
      payload:
        type: object
        required:
          - id
          - order
        properties:
          id:
            $ref: '#/components/schemas/ForwardTestID'
          order:
            $ref: '#/components/schemas/Order'
      traits:
        - $ref: "#/components/messageTraits/withReplyTo"
        - $ref: "#/components/messageTraits/withCorrelationID"
    OrdersCreateResponse:
      payload:
        type: object
        properties:
          error:
            $ref: '../../../../pkg/asyncapi/models.yaml#/components/schemas/Error'
      traits:
        - $ref: "#/components/messageTraits/withCorrelationID"

    StatusRequest:
      payload:
        type: object
        required:
          - id
        properties:
          id:
            $ref: '#/components/schemas/ForwardTestID'
      traits:
        - $ref: "#/components/messageTraits/withReplyTo"
        - $ref: "#/components/messageTraits/withCorrelationID"
    StatusResponse:
      payload:
        type: object
        oneOf:
        - properties:
            status:
              $ref: '#/components/schemas/ForwardTestStatus'
        - properties:
            error:
              $ref: '../../../../pkg/asyncapi/models.yaml#/components/schemas/Error'
      traits:
        - $ref: "#/components/messageTraits/withCorrelationID"

    ServiceInfoRequest:
      payload:
        type: object
      traits:
        - $ref: "#/components/messageTraits/withReplyTo"
        - $ref: "#/components/messageTraits/withCorrelationID"
    ServiceInfoResponse:
      payload:
        type: object
        required:
        - apiVersion
        - binVersion
        properties:
          apiVersion:
            description: Version of the API
            type: string
            example: 1.0.0
          binVersion:
            description: Version of the binary
            type: string
            example: 1.0.0
      traits:
        - $ref: "#/components/messageTraits/withCorrelationID"

  schemas:
    Account:
      type: object
      required:
        - name
        - assets
      properties:
        name:
          type: string
          description: Account's name
        assets:
          type: array
          description: Account's assets
          items:
            $ref: '#/components/schemas/Asset'
    Asset:
      type: object
      description: An asset is a particular commodity with an amount
      required:
        - name
        - amount
      properties:
        name:
          type: string
        amount:
          type: number
          format: double
    Date:
      type: string
      format: date-time
      description: Date-Time format according to RFC3339
      examples:
        - "1985-04-12T23:20:50.52Z"
        - "1937-01-01T12:00:27.87+00:20"
    Exchange:
      type: string
      description: Exchange name
      examples:
        - Binance
    Error:
      type: object
      description: Response to a failed call
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: Code to identify the error type, based on HTTP errors
        message:
          type: string
          description: Main error reason
          examples:
            - "Invalid request: no time specified"
    ForwardTestID:
      type: string
      description: Targeted forwardtest ID
    Order:
      type: object
      description: Order sent to the market
      required:
        - type
        - exchange
        - pair
        - side
        - quantity
      properties:
        id:
          type: string
          description: Order ID set by the system
        execution_time:
          description: Effective time of order execution
          $ref: '#/components/schemas/Date'
        type:
          $ref: '#/components/schemas/OrderType'
        exchange:
          $ref: '#/components/schemas/Exchange'
        pair:
          $ref: '#/components/schemas/Pair'
        side: 
          $ref: '#/components/schemas/OrderSide'
        quantity:
          type: number
          format: double
          description: Quantity of the asset that should be traded
        price:
          type: number
          format: double
          description: Price of the asset that where it should be traded
    ForwardTestStatus:
      type: object
      description: Status of a forwardtest
      required:
        - balance
      properties:
        balance:
          type: number
          format: double
          description: Current balance of the forwardtest
    OrderSide:
      type: string
      description: Side used by an order
      enum:
        - buy
        - sell
    OrderType:
      type: string
      description: Type of an order
      enum:
        - market
    Pair:
      type: string
      description: Pair symbol
      examples:
        - ETH-USDC
    Period:
      type: string
      description: Period symbol
      default: M1
      enum:
        - M1
        - M3
        - M5
        - M15
        - M30
        - H1
        - H2
        - H4
        - H6
        - H8
        - H12
        - D1
        - D3
        - W1