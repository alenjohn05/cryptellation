asyncapi: 2.5.0
info:
  title: Cryptellation Ticks Service
  version: 1.0.0
  description: >
    This service is serving ticks in real time, proxying exchanges API.
channels:
  cryptellation.ticks.register.request:
    publish:
      operationId: RegisterToTicksRequest
      description: Register to listen a specific symbol ticks
      tags:
        - name: register
      message:
        $ref: '#/components/messages/RegisteringRequest'
  cryptellation.ticks.register.response:
    subscribe:
      operationId: RegisterToTicksResponse
      description: Response to registering for listening to specific symbol ticks
      tags:
        - name: register
      message:
        $ref: '#/components/messages/RegisteringResponse'

  cryptellation.ticks.live.{exchange}.{pair}:
    parameters:
      exchange:
        description: Filter for ticks by exchange name
        schema:
          $ref: '#/components/schemas/Exchange'
      pair:
        description: Filter for ticks by pair symbol
        schema:
          $ref: '#/components/schemas/Pair'
    subscribe:
      operationId: WatchTicks
      description: Listen to ticks based on their exchange and their symbol
      tags:
        - name: listen
      message:
        $ref: '#/components/messages/Tick'

  cryptellation.ticks.unregister.request:
    publish:
      operationId: UnregisterToTicksRequest
      description: Unregister from listening to a specific symbol ticks
      tags:
        - name: unregister
      message:
        $ref: '#/components/messages/RegisteringRequest'
  cryptellation.ticks.unregister.response:
    subscribe:
      operationId: UnregisterToTicksResponse
      description: Response to unregistering for listening to specific symbol ticks
      tags:
        - name: unregister
      message:
        $ref: '#/components/messages/RegisteringResponse'

  cryptellation.ticks.service.info.request:
    publish:
      operationId: ServiceInfoRequest
      description: Request information about the service
      tags:
        - name: info request
      message:
        $ref: '#/components/messages/ServiceInfoRequest'
  cryptellation.ticks.service.info.response:
    subscribe:
      operationId: ServiceInfoResponse
      description: Receive information about the service
      tags:
        - name: info response
      message:
        $ref: '#/components/messages/ServiceInfoResponse'

components:
  messages:
    # Registering
    RegisteringResponse:
      headers:
        type: object
        properties:
          correlationId:
            description: Correlation ID set by client
            type: string
      payload:
        type: object
        properties:
          count:
            type: integer
            description: count of listener after the call is complete
          error:
            $ref: '#/components/schemas/Error'
      correlationId:
        description: Default Correlation ID
        location: $message.header#/correlationId
    Tick:
      payload:
        $ref: '#/components/schemas/Tick'
    RegisteringRequest:
      headers:
        type: object
        properties:
          correlationId:
            description: Correlation ID set by client
            type: string
      payload:
        type: object
        required:
          - exchange
          - pair
        properties:
          exchange:
            $ref: '#/components/schemas/Exchange'
          pair:
            $ref: '#/components/schemas/Pair'
      correlationId:
        description: Default Correlation ID
        location: $message.header#/correlationId

    # ServiceInfo
    ServiceInfoRequest:
      headers:
        type: object
        properties:
          correlationId:
            description: Correlation ID set by client
            type: string
      payload:
        type: object
      correlationId:
        description: Default Correlation ID
        location: $message.header#/correlationId
    ServiceInfoResponse:
      headers:
        type: object
        properties:
          correlationId:
            description: Correlation ID set by client
            type: string
      payload:
        type: object
        required:
        - apiVersion
        - binVersion
        properties:
          apiVersion:
            description: Version of the API
            type: string
            example: 1.0.0
          binVersion:
            description: Version of the binary
            type: string
            example: 1.0.0
      correlationId:
        description: Default Correlation ID
        location: $message.header#/correlationId

  schemas:
    Tick:
      type: object
      required:
        - time
        - pair
        - price
        - exchange
      properties:
        time:
          $ref: '#/components/schemas/Date'
        pair:
          $ref: '#/components/schemas/Pair'
        price:
          type: number
          format: double
          description: Tick price
          examples:
            - 1.5
        exchange:
          $ref: '#/components/schemas/Exchange'
    Exchange:
      type: string
      description: Exchange name
      examples:
        - Binance
    Pair:
      type: string
      description: Pair symbol
      examples:
        - ETH-USDC
    Date:
      type: string
      format: date-time
      description: Date-Time format according to RFC3339
      examples:
        - "1985-04-12T23:20:50.52Z"
        - "1937-01-01T12:00:27.87+00:20"
    Error:
      type: object
      description: Response to a failed call
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: Code to identify the error type, based on HTTP errors
        message:
          type: string
          description: Main error reason
          examples:
            - "Invalid request: no time specified"

