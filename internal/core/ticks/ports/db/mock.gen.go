// Code generated by MockGen. DO NOT EDIT.
// Source: port.go

// Package db is a generated GoMock package.
package db

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPort is a mock of Port interface.
type MockPort struct {
	ctrl     *gomock.Controller
	recorder *MockPortMockRecorder
}

// MockPortMockRecorder is the mock recorder for MockPort.
type MockPortMockRecorder struct {
	mock *MockPort
}

// NewMockPort creates a new mock instance.
func NewMockPort(ctrl *gomock.Controller) *MockPort {
	mock := &MockPort{ctrl: ctrl}
	mock.recorder = &MockPortMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPort) EXPECT() *MockPortMockRecorder {
	return m.recorder
}

// ClearAllSymbolListenersCount mocks base method.
func (m *MockPort) ClearAllSymbolListenersCount(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClearAllSymbolListenersCount", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// ClearAllSymbolListenersCount indicates an expected call of ClearAllSymbolListenersCount.
func (mr *MockPortMockRecorder) ClearAllSymbolListenersCount(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClearAllSymbolListenersCount", reflect.TypeOf((*MockPort)(nil).ClearAllSymbolListenersCount), ctx)
}

// ClearSymbolListenerSubscribers mocks base method.
func (m *MockPort) ClearSymbolListenerSubscribers(ctx context.Context, exchange, pairSymbol string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClearSymbolListenerSubscribers", ctx, exchange, pairSymbol)
	ret0, _ := ret[0].(error)
	return ret0
}

// ClearSymbolListenerSubscribers indicates an expected call of ClearSymbolListenerSubscribers.
func (mr *MockPortMockRecorder) ClearSymbolListenerSubscribers(ctx, exchange, pairSymbol interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClearSymbolListenerSubscribers", reflect.TypeOf((*MockPort)(nil).ClearSymbolListenerSubscribers), ctx, exchange, pairSymbol)
}

// DecrementSymbolListenerSubscribers mocks base method.
func (m *MockPort) DecrementSymbolListenerSubscribers(ctx context.Context, exchange, pairSymbol string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DecrementSymbolListenerSubscribers", ctx, exchange, pairSymbol)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DecrementSymbolListenerSubscribers indicates an expected call of DecrementSymbolListenerSubscribers.
func (mr *MockPortMockRecorder) DecrementSymbolListenerSubscribers(ctx, exchange, pairSymbol interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecrementSymbolListenerSubscribers", reflect.TypeOf((*MockPort)(nil).DecrementSymbolListenerSubscribers), ctx, exchange, pairSymbol)
}

// GetSymbolListenerSubscribers mocks base method.
func (m *MockPort) GetSymbolListenerSubscribers(ctx context.Context, exchange, pairSymbol string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSymbolListenerSubscribers", ctx, exchange, pairSymbol)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSymbolListenerSubscribers indicates an expected call of GetSymbolListenerSubscribers.
func (mr *MockPortMockRecorder) GetSymbolListenerSubscribers(ctx, exchange, pairSymbol interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSymbolListenerSubscribers", reflect.TypeOf((*MockPort)(nil).GetSymbolListenerSubscribers), ctx, exchange, pairSymbol)
}

// IncrementSymbolListenerSubscribers mocks base method.
func (m *MockPort) IncrementSymbolListenerSubscribers(ctx context.Context, exchange, pairSymbol string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncrementSymbolListenerSubscribers", ctx, exchange, pairSymbol)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IncrementSymbolListenerSubscribers indicates an expected call of IncrementSymbolListenerSubscribers.
func (mr *MockPortMockRecorder) IncrementSymbolListenerSubscribers(ctx, exchange, pairSymbol interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrementSymbolListenerSubscribers", reflect.TypeOf((*MockPort)(nil).IncrementSymbolListenerSubscribers), ctx, exchange, pairSymbol)
}
