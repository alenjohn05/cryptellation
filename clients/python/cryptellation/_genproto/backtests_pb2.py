# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: backtests.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0f\x62\x61\x63ktests.proto\x12\tbacktests\"h\n\x07\x41\x63\x63ount\x12.\n\x06\x61ssets\x18\x01 \x03(\x0b\x32\x1e.backtests.Account.AssetsEntry\x1a-\n\x0b\x41ssetsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01\"\xea\x01\n\x15\x43reateBacktestRequest\x12@\n\x08\x61\x63\x63ounts\x18\x01 \x03(\x0b\x32..backtests.CreateBacktestRequest.AccountsEntry\x12\x12\n\nstart_time\x18\x02 \x01(\t\x12\x10\n\x08\x65nd_time\x18\x03 \x01(\t\x12$\n\x1cseconds_between_price_events\x18\x04 \x01(\x04\x1a\x43\n\rAccountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12!\n\x05value\x18\x02 \x01(\x0b\x32\x12.backtests.Account:\x02\x38\x01\"$\n\x16\x43reateBacktestResponse\x12\n\n\x02id\x18\x01 \x01(\x04\"Z\n SubscribeToBacktestEventsRequest\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x15\n\rexchange_name\x18\x02 \x01(\t\x12\x13\n\x0bpair_symbol\x18\x03 \x01(\t\"#\n!SubscribeToBacktestEventsResponse\"$\n\x16\x41\x64vanceBacktestRequest\x12\n\n\x02id\x18\x01 \x01(\x04\"\x19\n\x17\x41\x64vanceBacktestResponse\"<\n\rBacktestEvent\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0c\n\x04time\x18\x02 \x01(\t\x12\x0f\n\x07\x63ontent\x18\x03 \x01(\t\"\x8b\x01\n\x1a\x43reateBacktestOrderRequest\x12\x13\n\x0b\x62\x61\x63ktest_id\x18\x01 \x01(\x04\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x15\n\rexchange_name\x18\x03 \x01(\t\x12\x13\n\x0bpair_symbol\x18\x04 \x01(\t\x12\x0c\n\x04side\x18\x05 \x01(\t\x12\x10\n\x08quantity\x18\x06 \x01(\x02\"\x1d\n\x1b\x43reateBacktestOrderResponse\"&\n\x0f\x41\x63\x63ountsRequest\x12\x13\n\x0b\x62\x61\x63ktest_id\x18\x01 \x01(\x04\"\x94\x01\n\x10\x41\x63\x63ountsResponse\x12;\n\x08\x61\x63\x63ounts\x18\x01 \x03(\x0b\x32).backtests.AccountsResponse.AccountsEntry\x1a\x43\n\rAccountsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12!\n\x05value\x18\x02 \x01(\x0b\x32\x12.backtests.Account:\x02\x38\x01\"$\n\rOrdersRequest\x12\x13\n\x0b\x62\x61\x63ktest_id\x18\x01 \x01(\x04\"~\n\x05Order\x12\x0c\n\x04time\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x15\n\rexchange_name\x18\x03 \x01(\t\x12\x13\n\x0bpair_symbol\x18\x04 \x01(\t\x12\x0c\n\x04side\x18\x05 \x01(\t\x12\x10\n\x08quantity\x18\x06 \x01(\x02\x12\r\n\x05price\x18\x07 \x01(\x02\"2\n\x0eOrdersResponse\x12 \n\x06orders\x18\x01 \x03(\x0b\x32\x10.backtests.Order2\xb1\x04\n\x10\x42\x61\x63ktestsService\x12W\n\x0e\x43reateBacktest\x12 .backtests.CreateBacktestRequest\x1a!.backtests.CreateBacktestResponse\"\x00\x12x\n\x19SubscribeToBacktestEvents\x12+.backtests.SubscribeToBacktestEventsRequest\x1a,.backtests.SubscribeToBacktestEventsResponse\"\x00\x12Z\n\x0f\x41\x64vanceBacktest\x12!.backtests.AdvanceBacktestRequest\x1a\".backtests.AdvanceBacktestResponse\"\x00\x12\x66\n\x13\x43reateBacktestOrder\x12%.backtests.CreateBacktestOrderRequest\x1a&.backtests.CreateBacktestOrderResponse\"\x00\x12\x45\n\x08\x41\x63\x63ounts\x12\x1a.backtests.AccountsRequest\x1a\x1b.backtests.AccountsResponse\"\x00\x12?\n\x06Orders\x12\x18.backtests.OrdersRequest\x1a\x19.backtests.OrdersResponse\"\x00\x42$Z\"/services/backtests/pkg/grpc/protob\x06proto3')



_ACCOUNT = DESCRIPTOR.message_types_by_name['Account']
_ACCOUNT_ASSETSENTRY = _ACCOUNT.nested_types_by_name['AssetsEntry']
_CREATEBACKTESTREQUEST = DESCRIPTOR.message_types_by_name['CreateBacktestRequest']
_CREATEBACKTESTREQUEST_ACCOUNTSENTRY = _CREATEBACKTESTREQUEST.nested_types_by_name['AccountsEntry']
_CREATEBACKTESTRESPONSE = DESCRIPTOR.message_types_by_name['CreateBacktestResponse']
_SUBSCRIBETOBACKTESTEVENTSREQUEST = DESCRIPTOR.message_types_by_name['SubscribeToBacktestEventsRequest']
_SUBSCRIBETOBACKTESTEVENTSRESPONSE = DESCRIPTOR.message_types_by_name['SubscribeToBacktestEventsResponse']
_ADVANCEBACKTESTREQUEST = DESCRIPTOR.message_types_by_name['AdvanceBacktestRequest']
_ADVANCEBACKTESTRESPONSE = DESCRIPTOR.message_types_by_name['AdvanceBacktestResponse']
_BACKTESTEVENT = DESCRIPTOR.message_types_by_name['BacktestEvent']
_CREATEBACKTESTORDERREQUEST = DESCRIPTOR.message_types_by_name['CreateBacktestOrderRequest']
_CREATEBACKTESTORDERRESPONSE = DESCRIPTOR.message_types_by_name['CreateBacktestOrderResponse']
_ACCOUNTSREQUEST = DESCRIPTOR.message_types_by_name['AccountsRequest']
_ACCOUNTSRESPONSE = DESCRIPTOR.message_types_by_name['AccountsResponse']
_ACCOUNTSRESPONSE_ACCOUNTSENTRY = _ACCOUNTSRESPONSE.nested_types_by_name['AccountsEntry']
_ORDERSREQUEST = DESCRIPTOR.message_types_by_name['OrdersRequest']
_ORDER = DESCRIPTOR.message_types_by_name['Order']
_ORDERSRESPONSE = DESCRIPTOR.message_types_by_name['OrdersResponse']
Account = _reflection.GeneratedProtocolMessageType('Account', (_message.Message,), {

  'AssetsEntry' : _reflection.GeneratedProtocolMessageType('AssetsEntry', (_message.Message,), {
    'DESCRIPTOR' : _ACCOUNT_ASSETSENTRY,
    '__module__' : 'backtests_pb2'
    # @@protoc_insertion_point(class_scope:backtests.Account.AssetsEntry)
    })
  ,
  'DESCRIPTOR' : _ACCOUNT,
  '__module__' : 'backtests_pb2'
  # @@protoc_insertion_point(class_scope:backtests.Account)
  })
_sym_db.RegisterMessage(Account)
_sym_db.RegisterMessage(Account.AssetsEntry)

CreateBacktestRequest = _reflection.GeneratedProtocolMessageType('CreateBacktestRequest', (_message.Message,), {

  'AccountsEntry' : _reflection.GeneratedProtocolMessageType('AccountsEntry', (_message.Message,), {
    'DESCRIPTOR' : _CREATEBACKTESTREQUEST_ACCOUNTSENTRY,
    '__module__' : 'backtests_pb2'
    # @@protoc_insertion_point(class_scope:backtests.CreateBacktestRequest.AccountsEntry)
    })
  ,
  'DESCRIPTOR' : _CREATEBACKTESTREQUEST,
  '__module__' : 'backtests_pb2'
  # @@protoc_insertion_point(class_scope:backtests.CreateBacktestRequest)
  })
_sym_db.RegisterMessage(CreateBacktestRequest)
_sym_db.RegisterMessage(CreateBacktestRequest.AccountsEntry)

CreateBacktestResponse = _reflection.GeneratedProtocolMessageType('CreateBacktestResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATEBACKTESTRESPONSE,
  '__module__' : 'backtests_pb2'
  # @@protoc_insertion_point(class_scope:backtests.CreateBacktestResponse)
  })
_sym_db.RegisterMessage(CreateBacktestResponse)

SubscribeToBacktestEventsRequest = _reflection.GeneratedProtocolMessageType('SubscribeToBacktestEventsRequest', (_message.Message,), {
  'DESCRIPTOR' : _SUBSCRIBETOBACKTESTEVENTSREQUEST,
  '__module__' : 'backtests_pb2'
  # @@protoc_insertion_point(class_scope:backtests.SubscribeToBacktestEventsRequest)
  })
_sym_db.RegisterMessage(SubscribeToBacktestEventsRequest)

SubscribeToBacktestEventsResponse = _reflection.GeneratedProtocolMessageType('SubscribeToBacktestEventsResponse', (_message.Message,), {
  'DESCRIPTOR' : _SUBSCRIBETOBACKTESTEVENTSRESPONSE,
  '__module__' : 'backtests_pb2'
  # @@protoc_insertion_point(class_scope:backtests.SubscribeToBacktestEventsResponse)
  })
_sym_db.RegisterMessage(SubscribeToBacktestEventsResponse)

AdvanceBacktestRequest = _reflection.GeneratedProtocolMessageType('AdvanceBacktestRequest', (_message.Message,), {
  'DESCRIPTOR' : _ADVANCEBACKTESTREQUEST,
  '__module__' : 'backtests_pb2'
  # @@protoc_insertion_point(class_scope:backtests.AdvanceBacktestRequest)
  })
_sym_db.RegisterMessage(AdvanceBacktestRequest)

AdvanceBacktestResponse = _reflection.GeneratedProtocolMessageType('AdvanceBacktestResponse', (_message.Message,), {
  'DESCRIPTOR' : _ADVANCEBACKTESTRESPONSE,
  '__module__' : 'backtests_pb2'
  # @@protoc_insertion_point(class_scope:backtests.AdvanceBacktestResponse)
  })
_sym_db.RegisterMessage(AdvanceBacktestResponse)

BacktestEvent = _reflection.GeneratedProtocolMessageType('BacktestEvent', (_message.Message,), {
  'DESCRIPTOR' : _BACKTESTEVENT,
  '__module__' : 'backtests_pb2'
  # @@protoc_insertion_point(class_scope:backtests.BacktestEvent)
  })
_sym_db.RegisterMessage(BacktestEvent)

CreateBacktestOrderRequest = _reflection.GeneratedProtocolMessageType('CreateBacktestOrderRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATEBACKTESTORDERREQUEST,
  '__module__' : 'backtests_pb2'
  # @@protoc_insertion_point(class_scope:backtests.CreateBacktestOrderRequest)
  })
_sym_db.RegisterMessage(CreateBacktestOrderRequest)

CreateBacktestOrderResponse = _reflection.GeneratedProtocolMessageType('CreateBacktestOrderResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATEBACKTESTORDERRESPONSE,
  '__module__' : 'backtests_pb2'
  # @@protoc_insertion_point(class_scope:backtests.CreateBacktestOrderResponse)
  })
_sym_db.RegisterMessage(CreateBacktestOrderResponse)

AccountsRequest = _reflection.GeneratedProtocolMessageType('AccountsRequest', (_message.Message,), {
  'DESCRIPTOR' : _ACCOUNTSREQUEST,
  '__module__' : 'backtests_pb2'
  # @@protoc_insertion_point(class_scope:backtests.AccountsRequest)
  })
_sym_db.RegisterMessage(AccountsRequest)

AccountsResponse = _reflection.GeneratedProtocolMessageType('AccountsResponse', (_message.Message,), {

  'AccountsEntry' : _reflection.GeneratedProtocolMessageType('AccountsEntry', (_message.Message,), {
    'DESCRIPTOR' : _ACCOUNTSRESPONSE_ACCOUNTSENTRY,
    '__module__' : 'backtests_pb2'
    # @@protoc_insertion_point(class_scope:backtests.AccountsResponse.AccountsEntry)
    })
  ,
  'DESCRIPTOR' : _ACCOUNTSRESPONSE,
  '__module__' : 'backtests_pb2'
  # @@protoc_insertion_point(class_scope:backtests.AccountsResponse)
  })
_sym_db.RegisterMessage(AccountsResponse)
_sym_db.RegisterMessage(AccountsResponse.AccountsEntry)

OrdersRequest = _reflection.GeneratedProtocolMessageType('OrdersRequest', (_message.Message,), {
  'DESCRIPTOR' : _ORDERSREQUEST,
  '__module__' : 'backtests_pb2'
  # @@protoc_insertion_point(class_scope:backtests.OrdersRequest)
  })
_sym_db.RegisterMessage(OrdersRequest)

Order = _reflection.GeneratedProtocolMessageType('Order', (_message.Message,), {
  'DESCRIPTOR' : _ORDER,
  '__module__' : 'backtests_pb2'
  # @@protoc_insertion_point(class_scope:backtests.Order)
  })
_sym_db.RegisterMessage(Order)

OrdersResponse = _reflection.GeneratedProtocolMessageType('OrdersResponse', (_message.Message,), {
  'DESCRIPTOR' : _ORDERSRESPONSE,
  '__module__' : 'backtests_pb2'
  # @@protoc_insertion_point(class_scope:backtests.OrdersResponse)
  })
_sym_db.RegisterMessage(OrdersResponse)

_BACKTESTSSERVICE = DESCRIPTOR.services_by_name['BacktestsService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\"/services/backtests/pkg/grpc/proto'
  _ACCOUNT_ASSETSENTRY._options = None
  _ACCOUNT_ASSETSENTRY._serialized_options = b'8\001'
  _CREATEBACKTESTREQUEST_ACCOUNTSENTRY._options = None
  _CREATEBACKTESTREQUEST_ACCOUNTSENTRY._serialized_options = b'8\001'
  _ACCOUNTSRESPONSE_ACCOUNTSENTRY._options = None
  _ACCOUNTSRESPONSE_ACCOUNTSENTRY._serialized_options = b'8\001'
  _ACCOUNT._serialized_start=30
  _ACCOUNT._serialized_end=134
  _ACCOUNT_ASSETSENTRY._serialized_start=89
  _ACCOUNT_ASSETSENTRY._serialized_end=134
  _CREATEBACKTESTREQUEST._serialized_start=137
  _CREATEBACKTESTREQUEST._serialized_end=371
  _CREATEBACKTESTREQUEST_ACCOUNTSENTRY._serialized_start=304
  _CREATEBACKTESTREQUEST_ACCOUNTSENTRY._serialized_end=371
  _CREATEBACKTESTRESPONSE._serialized_start=373
  _CREATEBACKTESTRESPONSE._serialized_end=409
  _SUBSCRIBETOBACKTESTEVENTSREQUEST._serialized_start=411
  _SUBSCRIBETOBACKTESTEVENTSREQUEST._serialized_end=501
  _SUBSCRIBETOBACKTESTEVENTSRESPONSE._serialized_start=503
  _SUBSCRIBETOBACKTESTEVENTSRESPONSE._serialized_end=538
  _ADVANCEBACKTESTREQUEST._serialized_start=540
  _ADVANCEBACKTESTREQUEST._serialized_end=576
  _ADVANCEBACKTESTRESPONSE._serialized_start=578
  _ADVANCEBACKTESTRESPONSE._serialized_end=603
  _BACKTESTEVENT._serialized_start=605
  _BACKTESTEVENT._serialized_end=665
  _CREATEBACKTESTORDERREQUEST._serialized_start=668
  _CREATEBACKTESTORDERREQUEST._serialized_end=807
  _CREATEBACKTESTORDERRESPONSE._serialized_start=809
  _CREATEBACKTESTORDERRESPONSE._serialized_end=838
  _ACCOUNTSREQUEST._serialized_start=840
  _ACCOUNTSREQUEST._serialized_end=878
  _ACCOUNTSRESPONSE._serialized_start=881
  _ACCOUNTSRESPONSE._serialized_end=1029
  _ACCOUNTSRESPONSE_ACCOUNTSENTRY._serialized_start=304
  _ACCOUNTSRESPONSE_ACCOUNTSENTRY._serialized_end=371
  _ORDERSREQUEST._serialized_start=1031
  _ORDERSREQUEST._serialized_end=1067
  _ORDER._serialized_start=1069
  _ORDER._serialized_end=1195
  _ORDERSRESPONSE._serialized_start=1197
  _ORDERSRESPONSE._serialized_end=1247
  _BACKTESTSSERVICE._serialized_start=1250
  _BACKTESTSSERVICE._serialized_end=1811
# @@protoc_insertion_point(module_scope)
