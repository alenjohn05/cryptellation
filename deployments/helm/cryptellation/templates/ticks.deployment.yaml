apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ticks
  name: ticks
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ticks
  strategy: {}
  template:
    metadata:
      labels:
        app: ticks
    spec:
      containers:
      - name: ticks
        image: {{ .Values.services.ticks.image }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /liveness
            port: {{ (.Values.services.ticks.health).port | default 9000 }}
        readinessProbe:
          httpGet:
            path: /readiness
            port: {{ (.Values.services.ticks.health).port | default 9000 }}
        command: [ "cryptellation-ticks", "serve" ]
        env:
        - name: "HEALTH_PORT"
          valueFrom:
            configMapKeyRef:
              key:  ticks.health.port
              name: cryptellation-config
        - name: "NATS_HOST"
          valueFrom:
            configMapKeyRef:
              key:  nats.host
              name: cryptellation-credentials
        - name: "NATS_PORT"
          valueFrom:
            configMapKeyRef:
              key:  nats.port
              name: cryptellation-credentials
        {{- include "common.env" "ticks" | indent 8 }}
        resources: {}
      initContainers:
      {{- include "dependencies.cockroachdb.init-container" . | indent 6 }}
      - name: init-sql-database
        image: {{ .Values.services.ticks.image }}
        command: [ "cryptellation-ticks", "migrations", "migrate" ]
        env:
        {{- include "common.env" "ticks" | indent 8 }}
      volumes:
        {{- include "dependencies.cockroachdb.volumes" . | indent 8 }}
status: {}
