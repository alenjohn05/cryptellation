apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ticks
  name: ticks
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ticks
  strategy: {}
  template:
    metadata:
      labels:
        app: ticks
    spec:
      initContainers:
      {{- include "dependencies.cockroachdb.init-container" . | indent 6 }}
      - name: init-sql-database
        image: {{ .Values.services.image.repository | default "lerenn/cryptellation" }}:{{ .Values.services.image.tag | default "latest" }}
        imagePullPolicy: {{ .Values.services.image.pullPolicy | default "Always" }}
        command: [ "cryptellation-ticks", "migrations", "migrate" ]
        env:
        {{- include "common.env" "ticks" | indent 8 }}
      containers:
      - name: ticks
        image: {{ .Values.services.image.repository | default "lerenn/cryptellation" }}:{{ .Values.services.image.tag | default "latest" }}
        imagePullPolicy: {{ .Values.services.image.pullPolicy | default "Always" }}
        livenessProbe:
          httpGet:
            path: /liveness
            port: {{ ((.Values.services.ticks).health).port | default 9000 }}
        readinessProbe:
          httpGet:
            path: /readiness
            port: {{ ((.Values.services.ticks).health).port | default 9000 }}
        command: [ "cryptellation-ticks", "serve" ]
        env:
        {{- include "common.env" "ticks" | indent 8 }}
        resources: {}
      volumes:
        {{- include "dependencies.cockroachdb.volumes" . | indent 8 }}
status: {}
